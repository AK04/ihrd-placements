security:

    role_hierarchy:
        'ROLE_ADMIN': [ROLE_USER]
    
    encoders:
        Symfony\Component\Security\Core\User\User:
            algorithm: bcrypt
        App\Entity\User:
            algorithm: bcrypt

    
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        chain_provider:
            chain:
                providers: [ in_memory, db_provider ]
        in_memory:
            memory:
                users:
                    admin: 
                        password: $2y$13$l.DiQY.bz1bot9vuweebbu4wLgczClqkUPJ1dp2d/rIisAMfK.ECa
                        roles: 'ROLE_ADMIN'
        db_provider:
            entity:
                class: App\Entity\User
                property: username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/
            provider: chain_provider
            form-login: 
                login-path: login
                check-path: login
            logout: true
            anonymous: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
